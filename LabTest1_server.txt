#include <stdio.h>

#include <sys/socket.h>

#include <netinet/in.h>

#include <arpa/inet.h>

#include <unistd.h>

#include <stdlib.h>

#include <time.h>

#define null 0

#include <string.h>



#include <pthread.h>

// SERVER _ SENDER

void* f(void* a) {

        printf("f\n");





        unsigned short int PORT=7777;

        char ADDRESS[256] ="172.30.113.85";

        int sd=socket(AF_INET, SOCK_DGRAM, 0);

        if(sd<0){

                perror("socket could not be created\n");

                return NULL;

        }

        printf("Socket created successfully\n");



        int broadcast=1;

        if(setsockopt(sd,SOL_SOCKET,SO_BROADCAST,(char*)&broadcast,sizeof(broadcast)) < 0)



        {



                printf("Error in setting Broadcast option\n");



        //closesocket(sock);



                return NULL;



        }

        struct sockaddr_in server;

        server.sin_family=AF_INET;

        server.sin_port=htons(7777);

        inet_aton(ADDRESS, &server.sin_addr);//server.sin_addr.s_addr=INNADR_ANY;

        if(bind(sd,(const struct sockaddr*)&server,sizeof(server))<0){

                perror("Binded failed!\n");

                return NULL;
	}

        printf("Binded successfully on ADDRES -> %s and Port %hu!\n", ADDRESS,PORT);



        struct sockaddr_in from;

        socklen_t len_from;



        char buffer_primit[256];

        char buffer[256]="na si tie\0";

        printf("waiting for client...\n");

        while(1){

                //int r=-1, w=-1;



                //r = recvfrom(sd, buffer_primit,256,0,(struct sockaddr*)&from,&len_from);

                //w=sendto(sd, buffer, 256,0,(struct sockaddr*)&from, len_from);



                recvfrom(sd, buffer_primit,256,0,(struct sockaddr*)&from,&len_from);



                printf("server am primit: %s\n",buffer_primit);



                sendto(sd, buffer, strlen(buffer)+1,0,(struct sockaddr*)&from, len_from);



                printf("server am trimis: %s\n",buffer);

        }

        return NULL;

}

int main(){

        int sd=socket(AF_INET, SOCK_STREAM, 0);

        if(sd<0){

                perror("Error creating socket\n");

                exit(1);

        }

        printf("Socket created successfully\n");

        struct sockaddr_in svr;

        svr.sin_family=AF_INET;

        svr.sin_port=htons(1234);

        char ADDRESS[256]="172.30.113.85";

        inet_aton(ADDRESS,&svr.sin_addr);

        if(bind(sd,(const struct sockaddr*)&svr, sizeof(svr))<0){

                perror("Error binding\n");

                exit(1);

        }

        unsigned short int PORT=1234;

        printf("Binded successfully on ADDRES -> %s and Port %hu!\n", ADDRESS,PORT);

        listen(sd,5);

	struct sockaddr_in client;

        socklen_t client_len;

         //while(1){

                int rez=accept(sd, (struct sockaddr*)&client,&client_len);

                if(rez<0){

                        perror("Connection failed\n");

                        exit(1);

                }

                printf("Client connected successfuly with ip %s.\n", inet_ntoa(client.sin_addr));



                char string1[50]="Care e nr. preferat a lui Adi Despot?\n\0"; 

                send(rez,string1, 50,0);



                uint16_t numar_client;



                recv(rez, &numar_client, sizeof(numar_client),0);

                numar_client=ntohs(numar_client);

                char string[50]="n-ai nimerit\0";

                if(numar_client==3){

                        printf("Ai nimerit, genial!!!!!nr=%hu\n", numar_client);

                        strcpy(string, "ai nimerit\0");

                }

                else{

                        printf("n-ai nimerit!!! nr=%hu\n", numar_client);

                }



                send(rez, string, 50, 0);



                pthread_t t;

                pthread_create(&t, NULL, f, NULL);

                printf("main\n");

                pthread_join(t, NULL);



        //}

        return 0;

}



